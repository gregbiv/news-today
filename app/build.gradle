buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://github.com/donnfelker/mvn-repo/raw/master/' }
    mavenLocal()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    google()
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27

        versionCode computeVersionCode()
        versionName computeVersionName()

        // Enable this if you want to use Build.GIT_SHA in your code somewhere.
        // This will give you the last GIT_SHA that was committed
        // buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        // Exclude file to avoid
        // Error: Duplicate files during packaging of APK
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword System.getenv("DEBUG_STORE_PASS")
            keyAlias 'debug'
            keyPassword System.getenv("DEBUG_KEY_PASS")
        }

        release {
            storeFile file('release.keystore')
            storePassword System.getenv("RELEASE_STORE_PASS")
            keyAlias 'release'
            keyPassword System.getenv("RELEASE_KEY_PASS")
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            minifyEnabled false
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
            // zipAlign false // this is default for debug
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
            // minifyEnabled true
            // proguardFile '..\proguard.cfg'
            // zipAlign true // this is default for release
            // testPackageName 'com.github.gregbiv.news.app.tests'
            // testInstrumentationRunner 'android.test.InstrumentationTestRunner' // this is the default
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    sourceSets {
        test {
            resources {
                srcDir "test"
            }
        }
    }
}

dependencies {
    // Fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true
    }
    // Android Support Libs
    implementation 'com.android.support:design:27.0.0'
    implementation 'com.android.support:support-compat:27.0.0'
    implementation 'com.android.support:appcompat-v7:27.0.0'
    implementation 'com.android.support:cardview-v7:27.0.0'
    implementation 'com.android.support:recyclerview-v7:27.0.0'
    implementation 'com.android.support:palette-v7:27.0.0'
    // RecycleView Utils
    implementation 'ca.barrenechea.header-decor:header-decor:0.2.8'
    implementation 'com.github.ksoichiro:android-observablescrollview:1.6.0'
    // View Injection
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // Logging
    implementation 'com.jakewharton.timber:timber:4.1.0'
    // Image Loading
    implementation 'com.github.florent37:glidepalette:2.1.1@aar'
    implementation 'com.github.bumptech.glide:glide:4.2.0'
    implementation 'com.github.bumptech.glide:okhttp-integration:4.2.0'
    // RxJava
    implementation 'io.reactivex:rxjava:1.2.3'
    implementation 'io.reactivex:rxandroid:1.2.1'
    // LeakCanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    // Event Bus
    implementation 'com.squareup:otto:1.3.8'
    // HTTP
    implementation 'com.squareup.retrofit:retrofit:1.9.0'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    // SqlBrite
    implementation 'com.squareup.sqlbrite:sqlbrite:1.1.2'
    // Dependency Injection
    implementation 'com.google.dagger:dagger:2.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.12'
    // Testing
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    // Set this dependency to build and run Espresso tests
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Contrib
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {
        // http://stackoverflow.com/a/30931887/5210
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    // Set this dependency to build and run UI Automator tests
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.mockito:mockito-core:2.11.0'
    compileOnly 'javax.annotation:jsr250-api:1.0'
}


afterEvaluate {
    initCrashlyticsPropertiesIfNeeded()
}

def initCrashlyticsPropertiesIfNeeded() {
    def propertiesFile = file('fabric.properties')
    if (!propertiesFile.exists()) {
        // 9 create fabric.properties file using gradle ant task
        def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: crashlyticsdemoApisecret)
            entry(key: "apiKey", value: crashlyticsdemoApikey)
        }
    }
}

def computeVersionCode() {

    if (System.env.BUILD_NUMBER) {              // Check if there is a system build number.
        return "$System.env.BUILD_NUMBER".toInteger()
    } else if (System.env.CIRCLE_BUILD_NUM) {   // Check to see if this is built on circle CI
        return "$System.env.CIRCLE_BUILD_NUM".toInteger()
    } else {
        return 1                                // if none is found, default to 1.
    }
}

def computeVersionName() {
    return "1." + computeVersionCode()
}

//noinspection GroovyUnusedAssignment
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
